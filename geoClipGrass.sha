//Cg



const float clumpWidthScalar=6.0;
const float alphaThreshold=.1;
const float tiltScalar=5.0;
const float heightScalar=6;
const float positionVariability=1.0;
const float minHeight=0.5; //(added to 0-1 height)



float unpackFloat(float3 h){
return h.x+h.y/256+h.z/(256*256);
}

void vshader(
    uniform float4x4 mat_modelproj,
    in float4 vtx_position : POSITION,
    uniform float4 k_offset,
    uniform float4 k_tileOffset,
    uniform float4 k_n,
    uniform float4 k_heightMapRez,
    out float2 l_uv: TEXCOORD0,
    in uniform sampler2D k_grassData: TEXUNIT0, 
    in uniform sampler2D k_height: TEXUNIT2,
    out float l_height : TEXCOORD1,
    out float2 l_uvSheet: TEXCOORD2,
    out float4 l_position : POSITION,
    uniform in float4 k_heightScale,
    out float3 l_norm: TEXCOORD3
    )
{
    float2 rPos=round(vtx_position.xy);
    float2 fGridPos=rPos+k_offset.xy;
    int2 gridPos=int2(fGridPos);
    
    float2 ftileGridPos=(fGridPos+k_tileOffset.xy);
    
    l_uv=(ftileGridPos+.5)/(k_heightMapRez.x);
    
    l_height=unpackFloat(tex2D(k_height,l_uv).xyz);
    float4 data=tex2D(k_grassData,l_uv);
    
    float fPos=vtx_position.x-rPos.x;
    l_uvSheet=float2(fPos*2+.5,vtx_position.z);
    
    fPos*=clumpWidthScalar;
    float2 pos;
    sincos(data.z*3.1415*8,pos.x,pos.y);
    float height=vtx_position.z*(data.w+minHeight);
    float2 sway;
    sincos(data.z*3.1415*15,sway.x,sway.y);
    sway=height*sway*tiltScalar*frac(data.w*32);
    l_norm=normalize(cross(float3(fPos*pos+sway,height),float3(-fPos*pos+sway,height)));
    pos=fPos*pos+sway;
    
    
    
    pos+=rPos+(data.xy-float2(0.5,0.5))*positionVariability;
    
    
    
    l_position = mul(mat_modelproj, float4(pos,l_height*k_heightScale.x+height*heightScalar,1));
}


void fshader(
  in float2 l_uvSheet: TEXCOORD2,
  in float l_height : TEXCOORD1,
  in uniform sampler2D k_grass: TEXUNIT1,
  in float3 l_norm: TEXCOORD3,
  out float4 o_color: COLOR) 
{
    o_color=tex2D(k_grass,l_uvSheet);
    if (o_color.w<alphaThreshold){discard;}
    float d=max(0,dot(l_norm,float3(1,1,1)))*.5+.5;
    o_color*=float4(d,d,d,0);
    //o_color.xyz=l_norm;
} 
